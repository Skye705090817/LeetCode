Given an array of integers, every element appears twice except for one. Find that single one.

Note:
Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?


class Solution {
public:
    int singleNumber(vector<int>& nums) {
        vector<int>::iterator j;
        sort(nums.begin(), nums.end());
        for(auto i = nums.begin(); i != nums.end(); i += 2)
        {
            j = i + 1;
            if(*(i) != *(j))
            {
                j = i;
                break;
            }
        }
        return *(j);
    }
};
